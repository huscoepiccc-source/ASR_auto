(asr_env) PS H:\Projects\AudioSeparationGUI> python batch_summarizer_test.py
llama_model_loader: loaded meta data with 32 key-value pairs and 398 tensors from H:\Projects\AudioSeparationGUI\asr_env\.cache\models\Qwen\Qwen3-4B-GGUF\Qwen3-4B-Q4_K_M.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = qwen3
llama_model_loader: - kv   1:                               general.type str              = model
llama_model_loader: - kv   2:                               general.name str              = Qwen3-4B
llama_model_loader: - kv   3:                           general.basename str              = Qwen3-4B
llama_model_loader: - kv   4:                       general.quantized_by str              = Unsloth
llama_model_loader: - kv   5:                         general.size_label str              = 4B
llama_model_loader: - kv   6:                           general.repo_url str              = https://huggingface.co/unsloth
llama_model_loader: - kv   7:                          qwen3.block_count u32              = 36
llama_model_loader: - kv   8:                       qwen3.context_length u32              = 40960
llama_model_loader: - kv   9:                     qwen3.embedding_length u32              = 2560
llama_model_loader: - kv  10:                  qwen3.feed_forward_length u32              = 9728
llama_model_loader: - kv  11:                 qwen3.attention.head_count u32              = 32
llama_model_loader: - kv  12:              qwen3.attention.head_count_kv u32              = 8
llama_model_loader: - kv  13:                       qwen3.rope.freq_base f32              = 1000000.000000
llama_model_loader: - kv  14:     qwen3.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv  15:                 qwen3.attention.key_length u32              = 128
llama_model_loader: - kv  16:               qwen3.attention.value_length u32              = 128
llama_model_loader: - kv  17:                       tokenizer.ggml.model str              = gpt2
llama_model_loader: - kv  18:                         tokenizer.ggml.pre str              = qwen2
llama_model_loader: - kv  19:                      tokenizer.ggml.tokens arr[str,151936]  = ["!", "\"", "#", "$", "%", "&", "'", ...
llama_model_loader: - kv  20:                  tokenizer.ggml.token_type arr[i32,151936]  = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  21:                      tokenizer.ggml.merges arr[str,151387]  = ["Ġ Ġ", "ĠĠ ĠĠ", "i n", "Ġ t",...
llama_model_loader: - kv  22:                tokenizer.ggml.eos_token_id u32              = 151645
llama_model_loader: - kv  23:            tokenizer.ggml.padding_token_id u32              = 151654
llama_model_loader: - kv  24:               tokenizer.ggml.add_bos_token bool             = false
llama_model_loader: - kv  25:                    tokenizer.chat_template str              = {%- if tools %}\n    {{- '<|im_start|>...
llama_model_loader: - kv  26:               general.quantization_version u32              = 2
llama_model_loader: - kv  27:                          general.file_type u32              = 15
llama_model_loader: - kv  28:                      quantize.imatrix.file str              = Qwen3-4B-GGUF/imatrix_unsloth.dat
llama_model_loader: - kv  29:                   quantize.imatrix.dataset str              = unsloth_calibration_Qwen3-4B.txt
llama_model_loader: - kv  30:             quantize.imatrix.entries_count i32              = 252
llama_model_loader: - kv  31:              quantize.imatrix.chunks_count i32              = 685
llama_model_loader: - type  f32:  145 tensors
llama_model_loader: - type q4_K:  216 tensors
llama_model_loader: - type q6_K:   37 tensors
print_info: file format = GGUF V3 (latest)
print_info: file type   = Q4_K - Medium
print_info: file size   = 2.32 GiB (4.95 BPW)
init_tokenizer: initializing tokenizer for type 2
load: control token: 151661 '<|fim_suffix|>' is not marked as EOG
load: control token: 151649 '<|box_end|>' is not marked as EOG
load: control token: 151647 '<|object_ref_end|>' is not marked as EOG
load: control token: 151654 '<|vision_pad|>' is not marked as EOG
load: control token: 151659 '<|fim_prefix|>' is not marked as EOG
load: control token: 151648 '<|box_start|>' is not marked as EOG
load: control token: 151644 '<|im_start|>' is not marked as EOG
load: control token: 151646 '<|object_ref_start|>' is not marked as EOG
load: control token: 151650 '<|quad_start|>' is not marked as EOG
load: control token: 151651 '<|quad_end|>' is not marked as EOG
load: control token: 151652 '<|vision_start|>' is not marked as EOG
load: control token: 151653 '<|vision_end|>' is not marked as EOG
load: control token: 151655 '<|image_pad|>' is not marked as EOG
load: control token: 151656 '<|video_pad|>' is not marked as EOG
load: control token: 151660 '<|fim_middle|>' is not marked as EOG
load: printing all EOG tokens:
load:   - 151643 ('<|endoftext|>')
load:   - 151645 ('<|im_end|>')
load:   - 151662 ('<|fim_pad|>')
load:   - 151663 ('<|repo_name|>')
load:   - 151664 ('<|file_sep|>')
load: special tokens cache size = 26
load: token to piece cache size = 0.9311 MB
print_info: arch             = qwen3
print_info: vocab_only       = 0
print_info: n_ctx_train      = 40960
print_info: n_embd           = 2560
print_info: n_layer          = 36
print_info: n_head           = 32
print_info: n_head_kv        = 8
print_info: n_rot            = 128
print_info: n_swa            = 0
print_info: is_swa_any       = 0
print_info: n_embd_head_k    = 128
print_info: n_embd_head_v    = 128
print_info: n_gqa            = 4
print_info: n_embd_k_gqa     = 1024
print_info: n_embd_v_gqa     = 1024
print_info: f_norm_eps       = 0.0e+00
print_info: f_norm_rms_eps   = 1.0e-06
print_info: f_clamp_kqv      = 0.0e+00
print_info: f_max_alibi_bias = 0.0e+00
print_info: f_logit_scale    = 0.0e+00
print_info: f_attn_scale     = 0.0e+00
print_info: n_ff             = 9728
print_info: n_expert         = 0
print_info: n_expert_used    = 0
print_info: causal attn      = 1
print_info: pooling type     = -1
print_info: rope type        = 2
print_info: rope scaling     = linear
print_info: freq_base_train  = 1000000.0
print_info: freq_scale_train = 1
print_info: n_ctx_orig_yarn  = 40960
print_info: rope_finetuned   = unknown
print_info: model type       = 4B
print_info: model params     = 4.02 B
print_info: general.name     = Qwen3-4B
print_info: vocab type       = BPE
print_info: n_vocab          = 151936
print_info: n_merges         = 151387
print_info: BOS token        = 11 ','
print_info: EOS token        = 151645 '<|im_end|>'
print_info: EOT token        = 151645 '<|im_end|>'
print_info: PAD token        = 151654 '<|vision_pad|>'
print_info: LF token         = 198 'Ċ'
print_info: FIM PRE token    = 151659 '<|fim_prefix|>'
print_info: FIM SUF token    = 151661 '<|fim_suffix|>'
print_info: FIM MID token    = 151660 '<|fim_middle|>'
print_info: FIM PAD token    = 151662 '<|fim_pad|>'
print_info: FIM REP token    = 151663 '<|repo_name|>'
print_info: FIM SEP token    = 151664 '<|file_sep|>'
print_info: EOG token        = 151643 '<|endoftext|>'
print_info: EOG token        = 151645 '<|im_end|>'
print_info: EOG token        = 151662 '<|fim_pad|>'
print_info: EOG token        = 151663 '<|repo_name|>'
print_info: EOG token        = 151664 '<|file_sep|>'
print_info: max token length = 256
load_tensors: loading model tensors, this can take a while... (mmap = true)
load_tensors: layer   0 assigned to device CPU, is_swa = 0
load_tensors: layer   1 assigned to device CPU, is_swa = 0
load_tensors: layer   2 assigned to device CPU, is_swa = 0
load_tensors: layer   3 assigned to device CPU, is_swa = 0
load_tensors: layer   4 assigned to device CPU, is_swa = 0
load_tensors: layer   5 assigned to device CPU, is_swa = 0
load_tensors: layer   6 assigned to device CPU, is_swa = 0
load_tensors: layer   7 assigned to device CPU, is_swa = 0
load_tensors: layer   8 assigned to device CPU, is_swa = 0
load_tensors: layer   9 assigned to device CPU, is_swa = 0
load_tensors: layer  10 assigned to device CPU, is_swa = 0
load_tensors: layer  11 assigned to device CPU, is_swa = 0
load_tensors: layer  12 assigned to device CPU, is_swa = 0
load_tensors: layer  13 assigned to device CPU, is_swa = 0
load_tensors: layer  14 assigned to device CPU, is_swa = 0
load_tensors: layer  15 assigned to device CPU, is_swa = 0
load_tensors: layer  16 assigned to device CPU, is_swa = 0
load_tensors: layer  17 assigned to device CPU, is_swa = 0
load_tensors: layer  18 assigned to device CPU, is_swa = 0
load_tensors: layer  19 assigned to device CPU, is_swa = 0
load_tensors: layer  20 assigned to device CPU, is_swa = 0
load_tensors: layer  21 assigned to device CPU, is_swa = 0
load_tensors: layer  22 assigned to device CPU, is_swa = 0
load_tensors: layer  23 assigned to device CPU, is_swa = 0
load_tensors: layer  24 assigned to device CPU, is_swa = 0
load_tensors: layer  25 assigned to device CPU, is_swa = 0
load_tensors: layer  26 assigned to device CPU, is_swa = 0
load_tensors: layer  27 assigned to device CPU, is_swa = 0
load_tensors: layer  28 assigned to device CPU, is_swa = 0
load_tensors: layer  29 assigned to device CPU, is_swa = 0
load_tensors: layer  30 assigned to device CPU, is_swa = 0
load_tensors: layer  31 assigned to device CPU, is_swa = 0
load_tensors: layer  32 assigned to device CPU, is_swa = 0
load_tensors: layer  33 assigned to device CPU, is_swa = 0
load_tensors: layer  34 assigned to device CPU, is_swa = 0
load_tensors: layer  35 assigned to device CPU, is_swa = 0
load_tensors: layer  36 assigned to device CPU, is_swa = 0
load_tensors: tensor 'token_embd.weight' (q6_K) (and 182 others) cannot be used with preferred buffer type CPU_REPACK, using CPU instead
load_tensors:   CPU_REPACK model buffer size =  1683.28 MiB
load_tensors:   CPU_Mapped model buffer size =  2362.55 MiB
repack: repack tensor blk.0.attn_q.weight with q4_K_8x8
repack: repack tensor blk.0.attn_k.weight with q4_K_8x8
repack: repack tensor blk.0.attn_output.weight with q4_K_8x8
repack: repack tensor blk.0.ffn_gate.weight with q4_K_8x8
.repack: repack tensor blk.0.ffn_up.weight with q4_K_8x8
repack: repack tensor blk.1.attn_q.weight with q4_K_8x8
repack: repack tensor blk.1.attn_k.weight with q4_K_8x8
repack: repack tensor blk.1.attn_output.weight with q4_K_8x8
.repack: repack tensor blk.1.ffn_gate.weight with q4_K_8x8
repack: repack tensor blk.1.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.2.attn_q.weight with q4_K_8x8
repack: repack tensor blk.2.attn_k.weight with q4_K_8x8
repack: repack tensor blk.2.attn_output.weight with q4_K_8x8
repack: repack tensor blk.2.ffn_gate.weight with q4_K_8x8
.repack: repack tensor blk.2.ffn_up.weight with q4_K_8x8
repack: repack tensor blk.3.attn_q.weight with q4_K_8x8
.repack: repack tensor blk.3.attn_k.weight with q4_K_8x8
repack: repack tensor blk.3.attn_output.weight with q4_K_8x8
repack: repack tensor blk.3.ffn_gate.weight with q4_K_8x8
.repack: repack tensor blk.3.ffn_up.weight with q4_K_8x8
repack: repack tensor blk.4.attn_q.weight with q4_K_8x8
repack: repack tensor blk.4.attn_k.weight with q4_K_8x8
repack: repack tensor blk.4.attn_v.weight with q4_K_8x8
repack: repack tensor blk.4.attn_output.weight with q4_K_8x8
.repack: repack tensor blk.4.ffn_gate.weight with q4_K_8x8
repack: repack tensor blk.4.ffn_down.weight with q4_K_8x8
.repack: repack tensor blk.4.ffn_up.weight with q4_K_8x8
repack: repack tensor blk.5.attn_q.weight with q4_K_8x8
.repack: repack tensor blk.5.attn_k.weight with q4_K_8x8
repack: repack tensor blk.5.attn_v.weight with q4_K_8x8
repack: repack tensor blk.5.attn_output.weight with q4_K_8x8
repack: repack tensor blk.5.ffn_gate.weight with q4_K_8x8
.repack: repack tensor blk.5.ffn_down.weight with q4_K_8x8
repack: repack tensor blk.5.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.6.attn_q.weight with q4_K_8x8
repack: repack tensor blk.6.attn_k.weight with q4_K_8x8
repack: repack tensor blk.6.attn_output.weight with q4_K_8x8
repack: repack tensor blk.6.ffn_gate.weight with q4_K_8x8
.repack: repack tensor blk.6.ffn_up.weight with q4_K_8x8
repack: repack tensor blk.7.attn_q.weight with q4_K_8x8
.repack: repack tensor blk.7.attn_k.weight with q4_K_8x8
repack: repack tensor blk.7.attn_v.weight with q4_K_8x8
repack: repack tensor blk.7.attn_output.weight with q4_K_8x8
repack: repack tensor blk.7.ffn_gate.weight with q4_K_8x8
repack: repack tensor blk.7.ffn_down.weight with q4_K_8x8
.repack: repack tensor blk.7.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.8.attn_q.weight with q4_K_8x8
repack: repack tensor blk.8.attn_k.weight with q4_K_8x8
repack: repack tensor blk.8.attn_v.weight with q4_K_8x8
repack: repack tensor blk.8.attn_output.weight with q4_K_8x8
repack: repack tensor blk.8.ffn_gate.weight with q4_K_8x8
.repack: repack tensor blk.8.ffn_down.weight with q4_K_8x8
repack: repack tensor blk.8.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.9.attn_q.weight with q4_K_8x8
repack: repack tensor blk.9.attn_k.weight with q4_K_8x8
repack: repack tensor blk.9.attn_output.weight with q4_K_8x8
repack: repack tensor blk.9.ffn_gate.weight with q4_K_8x8
.repack: repack tensor blk.9.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.10.attn_q.weight with q4_K_8x8
repack: repack tensor blk.10.attn_k.weight with q4_K_8x8
repack: repack tensor blk.10.attn_v.weight with q4_K_8x8
repack: repack tensor blk.10.attn_output.weight with q4_K_8x8
repack: repack tensor blk.10.ffn_gate.weight with q4_K_8x8
.repack: repack tensor blk.10.ffn_down.weight with q4_K_8x8
repack: repack tensor blk.10.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.11.attn_q.weight with q4_K_8x8
repack: repack tensor blk.11.attn_k.weight with q4_K_8x8
repack: repack tensor blk.11.attn_v.weight with q4_K_8x8
repack: repack tensor blk.11.attn_output.weight with q4_K_8x8
repack: repack tensor blk.11.ffn_gate.weight with q4_K_8x8
.repack: repack tensor blk.11.ffn_down.weight with q4_K_8x8
.repack: repack tensor blk.11.ffn_up.weight with q4_K_8x8
repack: repack tensor blk.12.attn_q.weight with q4_K_8x8
repack: repack tensor blk.12.attn_k.weight with q4_K_8x8
repack: repack tensor blk.12.attn_output.weight with q4_K_8x8
.repack: repack tensor blk.12.ffn_gate.weight with q4_K_8x8
repack: repack tensor blk.12.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.13.attn_q.weight with q4_K_8x8
repack: repack tensor blk.13.attn_k.weight with q4_K_8x8
repack: repack tensor blk.13.attn_v.weight with q4_K_8x8
repack: repack tensor blk.13.attn_output.weight with q4_K_8x8
repack: repack tensor blk.13.ffn_gate.weight with q4_K_8x8
.repack: repack tensor blk.13.ffn_down.weight with q4_K_8x8
repack: repack tensor blk.13.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.14.attn_q.weight with q4_K_8x8
repack: repack tensor blk.14.attn_k.weight with q4_K_8x8
repack: repack tensor blk.14.attn_v.weight with q4_K_8x8
repack: repack tensor blk.14.attn_output.weight with q4_K_8x8
.repack: repack tensor blk.14.ffn_gate.weight with q4_K_8x8
repack: repack tensor blk.14.ffn_down.weight with q4_K_8x8
.repack: repack tensor blk.14.ffn_up.weight with q4_K_8x8
repack: repack tensor blk.15.attn_q.weight with q4_K_8x8
.repack: repack tensor blk.15.attn_k.weight with q4_K_8x8
repack: repack tensor blk.15.attn_output.weight with q4_K_8x8
repack: repack tensor blk.15.ffn_gate.weight with q4_K_8x8
repack: repack tensor blk.15.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.16.attn_q.weight with q4_K_8x8
repack: repack tensor blk.16.attn_k.weight with q4_K_8x8
repack: repack tensor blk.16.attn_v.weight with q4_K_8x8
repack: repack tensor blk.16.attn_output.weight with q4_K_8x8
.repack: repack tensor blk.16.ffn_gate.weight with q4_K_8x8
repack: repack tensor blk.16.ffn_down.weight with q4_K_8x8
.repack: repack tensor blk.16.ffn_up.weight with q4_K_8x8
repack: repack tensor blk.17.attn_q.weight with q4_K_8x8
.repack: repack tensor blk.17.attn_k.weight with q4_K_8x8
repack: repack tensor blk.17.attn_v.weight with q4_K_8x8
repack: repack tensor blk.17.attn_output.weight with q4_K_8x8
repack: repack tensor blk.17.ffn_gate.weight with q4_K_8x8
repack: repack tensor blk.17.ffn_down.weight with q4_K_8x8
.repack: repack tensor blk.17.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.18.attn_q.weight with q4_K_8x8
repack: repack tensor blk.18.attn_k.weight with q4_K_8x8
repack: repack tensor blk.18.attn_output.weight with q4_K_8x8
repack: repack tensor blk.18.ffn_gate.weight with q4_K_8x8
.repack: repack tensor blk.18.ffn_up.weight with q4_K_8x8
repack: repack tensor blk.19.attn_q.weight with q4_K_8x8
repack: repack tensor blk.19.attn_k.weight with q4_K_8x8
repack: repack tensor blk.19.attn_v.weight with q4_K_8x8
.repack: repack tensor blk.19.attn_output.weight with q4_K_8x8
repack: repack tensor blk.19.ffn_gate.weight with q4_K_8x8
repack: repack tensor blk.19.ffn_down.weight with q4_K_8x8
.repack: repack tensor blk.19.ffn_up.weight with q4_K_8x8
repack: repack tensor blk.20.attn_q.weight with q4_K_8x8
.repack: repack tensor blk.20.attn_k.weight with q4_K_8x8
repack: repack tensor blk.20.attn_v.weight with q4_K_8x8
repack: repack tensor blk.20.attn_output.weight with q4_K_8x8
repack: repack tensor blk.20.ffn_gate.weight with q4_K_8x8
.repack: repack tensor blk.20.ffn_down.weight with q4_K_8x8
repack: repack tensor blk.20.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.21.attn_q.weight with q4_K_8x8
repack: repack tensor blk.21.attn_k.weight with q4_K_8x8
repack: repack tensor blk.21.attn_output.weight with q4_K_8x8
repack: repack tensor blk.21.ffn_gate.weight with q4_K_8x8
.repack: repack tensor blk.21.ffn_up.weight with q4_K_8x8
repack: repack tensor blk.22.attn_q.weight with q4_K_8x8
.repack: repack tensor blk.22.attn_k.weight with q4_K_8x8
repack: repack tensor blk.22.attn_v.weight with q4_K_8x8
repack: repack tensor blk.22.attn_output.weight with q4_K_8x8
repack: repack tensor blk.22.ffn_gate.weight with q4_K_8x8
.repack: repack tensor blk.22.ffn_down.weight with q4_K_8x8
repack: repack tensor blk.22.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.23.attn_q.weight with q4_K_8x8
repack: repack tensor blk.23.attn_k.weight with q4_K_8x8
repack: repack tensor blk.23.attn_v.weight with q4_K_8x8
repack: repack tensor blk.23.attn_output.weight with q4_K_8x8
repack: repack tensor blk.23.ffn_gate.weight with q4_K_8x8
.repack: repack tensor blk.23.ffn_down.weight with q4_K_8x8
repack: repack tensor blk.23.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.24.attn_q.weight with q4_K_8x8
repack: repack tensor blk.24.attn_k.weight with q4_K_8x8
repack: repack tensor blk.24.attn_output.weight with q4_K_8x8
.repack: repack tensor blk.24.ffn_gate.weight with q4_K_8x8
repack: repack tensor blk.24.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.25.attn_q.weight with q4_K_8x8
repack: repack tensor blk.25.attn_k.weight with q4_K_8x8
repack: repack tensor blk.25.attn_v.weight with q4_K_8x8
repack: repack tensor blk.25.attn_output.weight with q4_K_8x8
repack: repack tensor blk.25.ffn_gate.weight with q4_K_8x8
.repack: repack tensor blk.25.ffn_down.weight with q4_K_8x8
repack: repack tensor blk.25.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.26.attn_q.weight with q4_K_8x8
repack: repack tensor blk.26.attn_k.weight with q4_K_8x8
repack: repack tensor blk.26.attn_v.weight with q4_K_8x8
repack: repack tensor blk.26.attn_output.weight with q4_K_8x8
.repack: repack tensor blk.26.ffn_gate.weight with q4_K_8x8
repack: repack tensor blk.26.ffn_down.weight with q4_K_8x8
.repack: repack tensor blk.26.ffn_up.weight with q4_K_8x8
repack: repack tensor blk.27.attn_q.weight with q4_K_8x8
repack: repack tensor blk.27.attn_k.weight with q4_K_8x8
repack: repack tensor blk.27.attn_output.weight with q4_K_8x8
.repack: repack tensor blk.27.ffn_gate.weight with q4_K_8x8
repack: repack tensor blk.27.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.28.attn_q.weight with q4_K_8x8
repack: repack tensor blk.28.attn_k.weight with q4_K_8x8
repack: repack tensor blk.28.attn_v.weight with q4_K_8x8
repack: repack tensor blk.28.attn_output.weight with q4_K_8x8
repack: repack tensor blk.28.ffn_gate.weight with q4_K_8x8
.repack: repack tensor blk.28.ffn_down.weight with q4_K_8x8
.repack: repack tensor blk.28.ffn_up.weight with q4_K_8x8
repack: repack tensor blk.29.attn_q.weight with q4_K_8x8
repack: repack tensor blk.29.attn_k.weight with q4_K_8x8
repack: repack tensor blk.29.attn_v.weight with q4_K_8x8
repack: repack tensor blk.29.attn_output.weight with q4_K_8x8
.repack: repack tensor blk.29.ffn_gate.weight with q4_K_8x8
repack: repack tensor blk.29.ffn_down.weight with q4_K_8x8
.repack: repack tensor blk.29.ffn_up.weight with q4_K_8x8
repack: repack tensor blk.30.attn_q.weight with q4_K_8x8
.repack: repack tensor blk.30.attn_k.weight with q4_K_8x8
repack: repack tensor blk.30.attn_output.weight with q4_K_8x8
repack: repack tensor blk.30.ffn_gate.weight with q4_K_8x8
repack: repack tensor blk.30.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.31.attn_q.weight with q4_K_8x8
repack: repack tensor blk.31.attn_k.weight with q4_K_8x8
repack: repack tensor blk.31.attn_output.weight with q4_K_8x8
.repack: repack tensor blk.31.ffn_gate.weight with q4_K_8x8
repack: repack tensor blk.31.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.32.attn_q.weight with q4_K_8x8
repack: repack tensor blk.32.attn_k.weight with q4_K_8x8
repack: repack tensor blk.32.attn_output.weight with q4_K_8x8
repack: repack tensor blk.32.ffn_gate.weight with q4_K_8x8
.repack: repack tensor blk.32.ffn_up.weight with q4_K_8x8
repack: repack tensor blk.33.attn_q.weight with q4_K_8x8
.repack: repack tensor blk.33.attn_k.weight with q4_K_8x8
repack: repack tensor blk.33.attn_output.weight with q4_K_8x8
repack: repack tensor blk.33.ffn_gate.weight with q4_K_8x8
repack: repack tensor blk.33.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.34.attn_q.weight with q4_K_8x8
repack: repack tensor blk.34.attn_k.weight with q4_K_8x8
repack: repack tensor blk.34.attn_output.weight with q4_K_8x8
.repack: repack tensor blk.34.ffn_gate.weight with q4_K_8x8
repack: repack tensor blk.34.ffn_up.weight with q4_K_8x8
.repack: repack tensor blk.35.attn_q.weight with q4_K_8x8
repack: repack tensor blk.35.attn_k.weight with q4_K_8x8
repack: repack tensor blk.35.attn_output.weight with q4_K_8x8
repack: repack tensor blk.35.ffn_gate.weight with q4_K_8x8
.repack: repack tensor blk.35.ffn_up.weight with q4_K_8x8
..................
llama_context: constructing llama_context
llama_context: n_seq_max     = 1
llama_context: n_ctx         = 4096
llama_context: n_ctx_per_seq = 4096
llama_context: n_batch       = 512
llama_context: n_ubatch      = 512
llama_context: causal_attn   = 1
llama_context: flash_attn    = 0
llama_context: kv_unified    = false
llama_context: freq_base     = 1000000.0
llama_context: freq_scale    = 1
llama_context: n_ctx_per_seq (4096) < n_ctx_train (40960) -- the full capacity of the model will not be utilized
set_abort_callback: call
llama_context:        CPU  output buffer size =     0.58 MiB
create_memory: n_ctx = 4096 (padded)
llama_kv_cache_unified: layer   0: dev = CPU
llama_kv_cache_unified: layer   1: dev = CPU
llama_kv_cache_unified: layer   2: dev = CPU
llama_kv_cache_unified: layer   3: dev = CPU
llama_kv_cache_unified: layer   4: dev = CPU
llama_kv_cache_unified: layer   5: dev = CPU
llama_kv_cache_unified: layer   6: dev = CPU
llama_kv_cache_unified: layer   7: dev = CPU
llama_kv_cache_unified: layer   8: dev = CPU
llama_kv_cache_unified: layer   9: dev = CPU
llama_kv_cache_unified: layer  10: dev = CPU
llama_kv_cache_unified: layer  11: dev = CPU
llama_kv_cache_unified: layer  12: dev = CPU
llama_kv_cache_unified: layer  13: dev = CPU
llama_kv_cache_unified: layer  14: dev = CPU
llama_kv_cache_unified: layer  15: dev = CPU
llama_kv_cache_unified: layer  16: dev = CPU
llama_kv_cache_unified: layer  17: dev = CPU
llama_kv_cache_unified: layer  18: dev = CPU
llama_kv_cache_unified: layer  19: dev = CPU
llama_kv_cache_unified: layer  20: dev = CPU
llama_kv_cache_unified: layer  21: dev = CPU
llama_kv_cache_unified: layer  22: dev = CPU
llama_kv_cache_unified: layer  23: dev = CPU
llama_kv_cache_unified: layer  24: dev = CPU
llama_kv_cache_unified: layer  25: dev = CPU
llama_kv_cache_unified: layer  26: dev = CPU
llama_kv_cache_unified: layer  27: dev = CPU
llama_kv_cache_unified: layer  28: dev = CPU
llama_kv_cache_unified: layer  29: dev = CPU
llama_kv_cache_unified: layer  30: dev = CPU
llama_kv_cache_unified: layer  31: dev = CPU
llama_kv_cache_unified: layer  32: dev = CPU
llama_kv_cache_unified: layer  33: dev = CPU
llama_kv_cache_unified: layer  34: dev = CPU
llama_kv_cache_unified: layer  35: dev = CPU
llama_kv_cache_unified:        CPU KV buffer size =   576.00 MiB
llama_kv_cache_unified: size =  576.00 MiB (  4096 cells,  36 layers,  1/1 seqs), K (f16):  288.00 MiB, V (f16):  288.00 MiB
llama_context: enumerating backends
llama_context: backend_ptrs.size() = 1
llama_context: max_nodes = 3184
llama_context: worst-case: n_tokens = 512, n_seqs = 1, n_outputs = 0
graph_reserve: reserving a graph for ubatch with n_tokens =  512, n_seqs =  1, n_outputs =  512
graph_reserve: reserving a graph for ubatch with n_tokens =    1, n_seqs =  1, n_outputs =    1
graph_reserve: reserving a graph for ubatch with n_tokens =  512, n_seqs =  1, n_outputs =  512
llama_context:        CPU compute buffer size =   301.75 MiB
llama_context: graph nodes  = 1410
llama_context: graph splits = 1
CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | LLAMAFILE = 1 | OPENMP = 1 | REPACK = 1 |
Model metadata: {'general.name': 'Qwen3-4B', 'general.architecture': 'qwen3', 'qwen3.attention.layer_norm_rms_epsilon': '0.000001', 'general.type': 'model', 'general.repo_url': 'https://huggingface.co/unsloth', 'general.basename': 'Qwen3-4B', 'tokenizer.ggml.pre': 'qwen2', 'general.quantized_by': 'Unsloth', 'qwen3.block_count': '36', 'general.size_label': '4B', 'qwen3.context_length': '40960', 'qwen3.embedding_length': '2560', 'qwen3.feed_forward_length': '9728', 'qwen3.attention.head_count': '32', 'qwen3.attention.head_count_kv': '8', 'qwen3.rope.freq_base': '1000000.000000', 'tokenizer.ggml.add_bos_token': 'false', 'qwen3.attention.key_length': '128', 'qwen3.attention.value_length': '128', 'tokenizer.ggml.model': 'gpt2', 'general.file_type': '15', 'tokenizer.ggml.eos_token_id': '151645', 'tokenizer.ggml.padding_token_id': '151654', 'tokenizer.chat_template': '{%- if tools %}\n    {{- \'<|im_start|>system\\n\' }}\n    {%- if messages[0].role == \'system\' %}\n        {{- messages[0].content + \'\\n\\n\' }}\n    {%- endif %}\n    {{- "# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>" }}\n    {%- for tool in tools %}\n        {{- "\\n" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- "\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\"name\\": <function-name>, \\"arguments\\": <args-json-object>}\\n</tool_call><|im_end|>\\n" }}\n{%- else %}\n    {%- if messages[0].role == \'system\' %}\n        {{- \'<|im_start|>system\\n\' + messages[0].content + \'<|im_end|>\\n\' }}\n    {%- endif %}\n{%- endif %}\n{%- set ns = namespace(multi_step_tool=true, last_query_index=messages|length - 1) %}\n{%- for forward_message in messages %}\n    {%- set index = (messages|length - 1) - loop.index0 %}\n    {%- set message = messages[index] %}\n    {%- set current_content = message.content if message.content is defined and message.content is not none else \'\' %}\n    {%- set tool_start = \'<tool_response>\' %}\n    {%- set tool_start_length = tool_start|length %}\n    {%- set start_of_message = current_content[:tool_start_length] %}\n    {%- set tool_end = \'</tool_response>\' %}\n    {%- set tool_end_length = tool_end|length %}\n    {%- set start_pos = (current_content|length) - tool_end_length %}\n    {%- if start_pos < 0 %}\n        {%- set start_pos = 0 %}\n    {%- endif %}\n    {%- set end_of_message = current_content[start_pos:] %}\n    {%- if ns.multi_step_tool and message.role == "user" and not(start_of_message == tool_start and end_of_message == tool_end) %}\n        {%- set ns.multi_step_tool = false %}\n        {%- set ns.last_query_index = index %}\n    {%- endif %}\n{%- endfor %}\n{%- for message in messages %}\n    {%- if (message.role == "user") or (message.role == "system" and not loop.first) %}\n        {{- \'<|im_start|>\' + message.role + \'\\n\' + message.content + \'<|im_end|>\' + \'\\n\' }}\n    {%- elif message.role == "assistant" %}\n        {%- set m_content = message.content if message.content is defined and message.content is not none else \'\' %}\n        {%- set content = m_content %}\n        {%- set reasoning_content = \'\' %}\n        {%- if message.reasoning_content is defined and message.reasoning_content is not none %}\n            {%- set reasoning_content = message.reasoning_content %}\n        {%- else %}\n            {%- if \'</think>\' in m_content %}\n                {%- set content = (m_content.split(\'</think>\')|last).lstrip(\'\\n\') %}\n                {%- set reasoning_content = (m_content.split(\'</think>\')|first).rstrip(\'\\n\') %}\n                {%- set reasoning_content = (reasoning_content.split(\'<think>\')|last).lstrip(\'\\n\') %}\n            {%- endif %}\n        {%- endif %}\n        {%- if loop.index0 > ns.last_query_index %}\n            {%- if loop.last or (not loop.last and (not reasoning_content.strip() == \'\')) %}\n                {{- \'<|im_start|>\' + message.role + \'\\n<think>\\n\' + reasoning_content.strip(\'\\n\') + \'\\n</think>\\n\\n\' + content.lstrip(\'\\n\') }}\n            {%- else %}\n                {{- \'<|im_start|>\' + message.role + \'\\n\' + content }}\n            {%- endif %}\n        {%- else %}\n            {{- \'<|im_start|>\' + message.role + \'\\n\' + content }}\n        {%- endif %}\n        {%- if message.tool_calls %}\n            {%- for tool_call in message.tool_calls %}\n                {%- if (loop.first and content) or (not loop.first) %}\n                    {{- \'\\n\' }}\n                {%- endif %}\n                {%- if tool_call.function %}\n                    {%- set tool_call = tool_call.function %}\n                {%- endif %}\n                {{- \'<tool_call>\\n{"name": "\' }}\n                {{- tool_call.name }}\n                {{- \'", "arguments": \' }}\n                {%- if tool_call.arguments is string %}\n                    {{- tool_call.arguments }}\n                {%- else %}\n                    {{- tool_call.arguments | tojson }}\n                {%- endif %}\n                {{- \'}\\n</tool_call>\' }}\n            {%- endfor %}\n        {%- endif %}\n        {{- \'<|im_end|>\\n\' }}\n    {%- elif message.role == "tool" %}\n        {%- if loop.first or (messages[loop.index0 - 1].role != "tool") %}\n            {{- \'<|im_start|>user\' }}\n        {%- endif %}\n        {{- \'\\n<tool_response>\\n\' }}\n        {{- message.content }}\n        {{- \'\\n</tool_response>\' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != "tool") %}\n            {{- \'<|im_end|>\\n\' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- \'<|im_start|>assistant\\n\' }}\n    {%- if enable_thinking is defined and enable_thinking is false %}\n        {{- \'<think>\\n\\n</think>\\n\\n\' }}\n    {%- endif %}\n{%- endif %}', 'general.quantization_version': '2', 'quantize.imatrix.chunks_count': '685', 'quantize.imatrix.file': 'Qwen3-4B-GGUF/imatrix_unsloth.dat', 'quantize.imatrix.dataset': 'unsloth_calibration_Qwen3-4B.txt', 'quantize.imatrix.entries_count': '252'}
Available chat formats from metadata: chat_template.default
Using gguf chat template: {%- if tools %}
    {{- '<|im_start|>system\n' }}
    {%- if messages[0].role == 'system' %}
        {{- messages[0].content + '\n\n' }}
    {%- endif %}
    {{- "# Tools\n\nYou may call one or more functions to assist with the user query.\n\nYou are provided with function signatures within <tools></tools> XML tags:\n<tools>" }}
    {%- for tool in tools %}
        {{- "\n" }}
        {{- tool | tojson }}
    {%- endfor %}
    {{- "\n</tools>\n\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\n<tool_call>\n{\"name\": <function-name>, \"arguments\": <args-json-object>}\n</tool_call><|im_end|>\n" }}
{%- else %}
    {%- if messages[0].role == 'system' %}
        {{- '<|im_start|>system\n' + messages[0].content + '<|im_end|>\n' }}
    {%- endif %}
{%- endif %}
{%- set ns = namespace(multi_step_tool=true, last_query_index=messages|length - 1) %}
{%- for forward_message in messages %}
    {%- set index = (messages|length - 1) - loop.index0 %}
    {%- set message = messages[index] %}
    {%- set current_content = message.content if message.content is defined and message.content is not none else '' %}
    {%- set tool_start = '<tool_response>' %}
    {%- set tool_start_length = tool_start|length %}
    {%- set start_of_message = current_content[:tool_start_length] %}
    {%- set tool_end = '</tool_response>' %}
    {%- set tool_end_length = tool_end|length %}
    {%- set start_pos = (current_content|length) - tool_end_length %}
    {%- if start_pos < 0 %}
        {%- set start_pos = 0 %}
    {%- endif %}
    {%- set end_of_message = current_content[start_pos:] %}
    {%- if ns.multi_step_tool and message.role == "user" and not(start_of_message == tool_start and end_of_message == tool_end) %}
        {%- set ns.multi_step_tool = false %}
        {%- set ns.last_query_index = index %}
    {%- endif %}
{%- endfor %}
{%- for message in messages %}
    {%- if (message.role == "user") or (message.role == "system" and not loop.first) %}
        {{- '<|im_start|>' + message.role + '\n' + message.content + '<|im_end|>' + '\n' }}
    {%- elif message.role == "assistant" %}
        {%- set m_content = message.content if message.content is defined and message.content is not none else '' %}
        {%- set content = m_content %}
        {%- set reasoning_content = '' %}
        {%- if message.reasoning_content is defined and message.reasoning_content is not none %}
            {%- set reasoning_content = message.reasoning_content %}
        {%- else %}
            {%- if '</think>' in m_content %}
                {%- set content = (m_content.split('</think>')|last).lstrip('\n') %}
                {%- set reasoning_content = (m_content.split('</think>')|first).rstrip('\n') %}
                {%- set reasoning_content = (reasoning_content.split('<think>')|last).lstrip('\n') %}
            {%- endif %}
        {%- endif %}
        {%- if loop.index0 > ns.last_query_index %}
            {%- if loop.last or (not loop.last and (not reasoning_content.strip() == '')) %}
                {{- '<|im_start|>' + message.role + '\n<think>\n' + reasoning_content.strip('\n') + '\n</think>\n\n' + content.lstrip('\n') }}
            {%- else %}
                {{- '<|im_start|>' + message.role + '\n' + content }}
            {%- endif %}
        {%- else %}
            {{- '<|im_start|>' + message.role + '\n' + content }}
        {%- endif %}
        {%- if message.tool_calls %}
            {%- for tool_call in message.tool_calls %}
                {%- if (loop.first and content) or (not loop.first) %}
                    {{- '\n' }}
                {%- endif %}
                {%- if tool_call.function %}
                    {%- set tool_call = tool_call.function %}
                {%- endif %}
                {{- '<tool_call>\n{"name": "' }}
                {{- tool_call.name }}
                {{- '", "arguments": ' }}
                {%- if tool_call.arguments is string %}
                    {{- tool_call.arguments }}
                {%- else %}
                    {{- tool_call.arguments | tojson }}
                {%- endif %}
                {{- '}\n</tool_call>' }}
            {%- endfor %}
        {%- endif %}
        {{- '<|im_end|>\n' }}
    {%- elif message.role == "tool" %}
        {%- if loop.first or (messages[loop.index0 - 1].role != "tool") %}
            {{- '<|im_start|>user' }}
        {%- endif %}
        {{- '\n<tool_response>\n' }}
        {{- message.content }}
        {{- '\n</tool_response>' }}
        {%- if loop.last or (messages[loop.index0 + 1].role != "tool") %}
            {{- '<|im_end|>\n' }}
        {%- endif %}
    {%- endif %}
{%- endfor %}
{%- if add_generation_prompt %}
    {{- '<|im_start|>assistant\n' }}
    {%- if enable_thinking is defined and enable_thinking is false %}
        {{- '<think>\n\n</think>\n\n' }}
    {%- endif %}
{%- endif %}
Using chat eos_token: <|im_end|>
Using chat bos_token: ,
